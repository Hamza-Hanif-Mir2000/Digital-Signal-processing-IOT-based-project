#include <ESP8266WiFi.h>;
#include <WiFiClient.h>;
#include <ThingSpeak.h>;
#include "DHT.h"
#define DHTTYPE DHT11
const char* ssid = "Hassan"; //Your Network SSID
const char* password = "315509hassan"; //Your Network Password
//int val;
int VIBRATION_SENSOR = 5;
int led_RED = 4;
int led_GREEN = 16;
int val; 
WiFiClient client;
 
// Initialize DHT sensor.
DHT dht(15, DHTTYPE); 
unsigned long myChannelNumber = 1765709; //Your Channel Number (Without Brackets)
const char * myWriteAPIKey = "11PPYM7QQS3SHF64"; //Your Write API Key
void setup()
{
Serial.begin(9600);
pinMode(VIBRATION_SENSOR, INPUT);
pinMode(led_RED, OUTPUT);
pinMode(led_GREEN, OUTPUT);
digitalWrite(led_RED,LOW);
digitalWrite(led_GREEN,LOW);
delay(10);
dht.begin();
Serial.begin(115200);
Serial.println("Humidity and Temperature\n\n");
delay(200);
// Connect to WiFi network
WiFi.begin(ssid, password);
ThingSpeak.begin(client);
}
long TP_init()
 {
 delay(10);
 long measurement=pulseIn(VIBRATION_SENSOR, HIGH); //wait for the pin to get HIGH and returns 
measurement
 return measurement;
 }
void loop()
{
long measurement =TP_init();
float h =dht.readHumidity();
float t = dht.readTemperature();
Serial.print("Current Humidity = ");
Serial.print(h);
Serial.print("% ");
Serial.print("Current Temperature = ");
Serial.print(t);
Serial.println(" C ");
delay(20);
 if(measurement >= 1000)
 {
 digitalWrite(led_RED,HIGH);
 digitalWrite(led_GREEN,LOW);
 delay(10);
 Serial.print("Vibration measurment = ");
 Serial.println(measurement);
 ThingSpeak.writeField(myChannelNumber, 1,measurement, myWriteAPIKey);
 ThingSpeak.writeField(myChannelNumber, 2,h, myWriteAPIKey);
 ThingSpeak.writeField(myChannelNumber, 3,t, myWriteAPIKey);
 delay(10);
 
 }
 else
 digitalWrite(led_GREEN,HIGH);
 digitalWrite(led_RED,LOW);
 delay(10);
 Serial.print("Vibration measurment = ");
 Serial.println(measurement);
 ThingSpeak.writeField(myChannelNumber, 1,measurement, myWriteAPIKey);
 ThingSpeak.writeField(myChannelNumber, 2,h, myWriteAPIKey);
 ThingSpeak.writeField(myChannelNumber, 3,t, myWriteAPIKey);
 delay(10);
}
